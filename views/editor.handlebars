{{#section 'head'}}
<link rel="canonical" href="/" />
<style type="text/css" media="screen">
    #editor {
        height:100vh;
        width: 50vw;
    }
    body{
        display: flex;
        flex-direction: row;

    }
</style>
{{/section}}
<div onChange="update()"id="editor">{{initJson}}</div>
<script src="/ace-builds/src-min-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
<script>
    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/monokai");
    editor.session.setMode("ace/mode/json");

    var debouncedUpdate = debounce(toUpdate, 1000);


    editor.getSession().on('change', function () {
        update()
    });

    function update() {;
        debouncedUpdate();
    }
    
    function toUpdate() {
        const value = editor.getSession().getValue();
        // var xhr = new XMLHttpRequest();
        // xhr.open("POST", '/save', true);
        //xhr.setRequestHeader('Content-Type', 'application/json');
        //xhr.send(value);
        postData(`/save`, {value: value})
            .then(data => {
                console.log(JSON.stringify(data))
                document.getElementById('previewIframe').contentWindow.location.reload();
            }) // JSON-string from `response.json()` call
            .catch(error => console.error(error));
    }

    function debounce(func, wait, immediate) {
            var timeout;
            return function () {
                var context = this, args = arguments;
                var later = function () {
                    timeout = null;
                    if (!immediate) func.apply(context, args);
                };
                var callNow = immediate && !timeout;
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
                if (callNow) func.apply(context, args);
            };
        };

    function postData(url = ``, data = {}) {
            // Default options are marked with *
            return fetch(url, {
                method: "POST", // *GET, POST, PUT, DELETE, etc.
                mode: "cors", // no-cors, cors, *same-origin
                cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
                credentials: "same-origin", // include, *same-origin, omit
                headers: {
                    "Content-Type": "application/json",
                    // "Content-Type": "application/x-www-form-urlencoded",
                },
                redirect: "follow", // manual, *follow, error
                referrer: "no-referrer", // no-referrer, *client
                body: JSON.stringify(data), // body data type must match "Content-Type" header
            })
                .then(response => response.json()); // parses JSON response into native Javascript objects 
        }
</script>


<iframe id="previewIframe" style="height:100vh; width: 50vw;" src="/preview/{{title}}"></iframe>